name: terragrunt

on:
  push:
    branches:
      - main

jobs:
  manual_run:
    # if: github.event_name == 'issue_comment' &&
    #       contains(github.event.comment.html_url, '/pull/') && 
    #       startsWith(github.event.comment.body, '/run')
    runs-on: ubuntu-latest

    steps:
      # - name: Get branch name and sha
      #   id: get_branch
      #   run: |
      #     PR=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" ${{ github.event.issue.pull_request.url }})
      #     echo "::set-output name=branch::$(echo $PR | jq -r '.head.ref')"
      #     echo "::set-output name=sha::$(echo $PR | jq -r '.head.sha')"

      - name: Checkout
        uses: actions/checkout@v3
        # with:
        #   ref: ${{ steps.get_branch.outputs.branch }}

      - name: Set env
        run: |
          echo "AWS_ACCESS_KEY_ID=dummy" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=dummy" >> $GITHUB_ENV
          echo "AWS_DEFAULT_REGION=ap-northeast-1" >> $GITHUB_ENV
          echo "LOCALSTACK_HOSTNAME=localhost" >> $GITHUB_ENV
          echo "S3_HOSTNAME=localhost" >> $GITHUB_ENV
          echo "TERRAGRUNT_TFPATH=tflocal" >> $GITHUB_ENV

      - name: Install aqua
        uses: aquaproj/aqua-installer@v2.0.2
        with:
          aqua_version: v1.35.0
          aqua_opts: "-l"

      - name: Install tflocal
        run: |
          TFLOCAL_VERSION=0.6
          pip3 install terraform-local==${TFLOCAL_VERSION}

      - name: Start LocalStack
        run: |
          docker compose up -d localstack

          BUCKET_NAME=localstack-tfstate
          alias aws="aws --endpoint-url http://localstack:4566"

          aws s3api create-bucket \
            --bucket ${BUCKET_NAME} \
            --create-bucket-configuration LocationConstraint=ap-northeast-1

          aws s3api put-bucket-versioning \
            --bucket ${BUCKET_NAME} \
            --versioning-configuration Status=Enabled

          aws s3api put-public-access-block \
            --bucket ${BUCKET_NAME} \
            --public-access-block-configuration BlockPublicAcls=true,IgnorePublicAcls=true,BlockPublicPolicy=true,RestrictPublicBuckets=true

          aws s3api put-bucket-encryption \
            --bucket ${BUCKET_NAME} \
            --server-side-encryption-configuration '{"Rules": [{"ApplyServerSideEncryptionByDefault": {"SSEAlgorithm": "AES256"}}]}'

      - name: Run
        run: |
          cd sandbox/envs/dev
          terragrunt run-all plan
